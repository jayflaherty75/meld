
/*
 * Generated by Meld Framework, do not modify.  Any changes will be overwritten
 * during the next build.
 */

#pragma once

namespace Module {

typedef short (__cdecl *ModuleWillLoadFn) (void*  entryPtr );
typedef short (__cdecl *ModuleHasUnloadedFn) (void*  entryPtr );

struct LibraryEntry { 
	void* library;
	void* interfacePtr;
	String moduleId;
	String moduleName;
	String moduleFullName;
	String moduleVersion;
	String fileName;
	ModuleHasUnloadedFn unload;
};

struct Interface {
	short (__cdecl *startup) ();
	short (__cdecl *shutdown) ();
	void* construct;
	void* destruct;
	void* update;
	void* test;
	short (__cdecl *initialize) (int _argc , void*  _argv );
	short (__cdecl *uninitialize) ();
	void  (__cdecl *setModuleWillLoad) (ModuleWillLoadFn handler );
	void  (__cdecl *setModuleHasUnloaded) (ModuleHasUnloadedFn handler );
	void* (__cdecl *require) (char*  moduleName );
	short (__cdecl *unload) (char*  moduleName );
	short (__cdecl *testModule) (char*  moduleName );
	char* (__cdecl *argv) (unsigned long index );
	long (__cdecl *argc) ();
};

}
