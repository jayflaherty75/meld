
/*
 * Generated by Meld Framework, do not modify.  Any changes will be overwritten
 * during the next build.
 */

#pragma once

namespace Fault {

typedef void  (__cdecl *Handler) (char*  errName , char*  message , char*  filename , int lineNum );

struct Header { 
	zstring*64 name;
	unsigned short code;
};

struct Interface {
	short (__cdecl *startup) ();
	short (__cdecl *shutdown) ();
	void* construct;
	void* destruct;
	void* update;
	void* test;
	short (__cdecl *registerType) (char*  errName );
	short (__cdecl *assignHandler) (short errCode , Handler handler );
	short (__cdecl *getCode) (char*  errName );
	void  (__cdecl *throw) (int errCode , char*  errName , char*  message , char*  filename , int lineNum );
	void  (__cdecl *defaultFatalHandler) (char*  errName , char*  message , char*  filename , int lineNum );
	void  (__cdecl *defaultErrorHandler) (char*  errName , char*  message , char*  filename , int lineNum );
	void  (__cdecl *defaultWarningHandler) (char*  errName , char*  message , char*  filename , int lineNum );
};

}
