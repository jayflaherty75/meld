
/*
 * Generated by Meld Framework, do not modify.  Any changes will be overwritten
 * during the next build.
 */

#pragma once

#include "headers/module_v0.1.0.h"
#include "headers/fault_v0.1.0.h"
#include "headers/tester_v0.1.0.h"
#include "headers/sys_v0.1.0.h"
#include "headers/console-c_v0.1.0.h"

#ifndef NULL
#define NULL	0
#endif

#ifndef FALSE
#define FALSE	0
#endif

#ifndef TRUE
#define TRUE	-1
#endif

#ifndef String
#define String 	char*
#endif

Module::Interface* _module;
ConsoleC::Interface* _consoleC;
Fault::Interface* _fault;
Tester::Interface *_tester;
Sys::Interface* _sys;

struct ModuleStateType {
	ConsoleC::Interface methods;
	short isLoaded;
	short isStarted;
} moduleState;

struct ErrorCodes {
	int generalError;
} errors;

namespace ConsoleC {
	short startup () __attribute__((cdecl));
	short shutdown () __attribute__((cdecl));
	short shutdown () __attribute__((cdecl));
	short test (void *describeFn);
	void logMessage (char* message) __attribute__((cdecl));
	void logWarning (char* id, char* message, char* source, int lineNum) __attribute__((cdecl));
	void logError (char* id, char* message, char* source, int lineNum) __attribute__((cdecl));
	void logSuccess (char* id, char* message, char* source, int lineNum) __attribute__((cdecl));
	char * _time (char *buffer) __attribute__((cdecl));
}

