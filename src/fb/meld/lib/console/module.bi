
/'
' Generated by Meld Framework, do not modify.  Any changes will be overwritten
' during the next build.
'/


#include once "../../../../../modules/headers/console/console-v1.bi"
#include once "console.bi"

Function exports cdecl Alias "exports" () As any ptr export
	
	moduleState.methods.startup = @Console.startup
	moduleState.methods.shutdown = @Console.shutdown
	moduleState.methods.logMessage = @Console.logMessage
	moduleState.methods.logWarning = @Console.logWarning
	moduleState.methods.logError = @Console.logError
	moduleState.methods.logSuccess = @Console.logSuccess

	return @moduleState.methods
End Function

Function load cdecl Alias "load" (modulePtr As Module.Interface ptr) As short export
	If modulePtr = NULL Then
		print("**** Console.load: Invalid Module interface pointer")
		return false
	End If

	If not moduleState.isLoaded Then
		moduleState.startups = 0
		moduleState.isLoaded = true

		_moduleLocal = *modulePtr
		_module = @_moduleLocal

		_console = exports()

		_fault = modulePtr->require("fault")
		If _fault = NULL then
			print("**** Console.load: Failed to load fault dependency")
			Return false
		End If

		_errorHandling = modulePtr->require("error-handling")
		If _errorHandling = NULL then
			print("**** Console.load: Failed to load error-handling dependency")
			Return false
		End If

		_sys = modulePtr->require("sys")
		If _sys = NULL then
			print("**** Console.load: Failed to load sys dependency")
			Return false
		End If



	End If

	return true
End Function

Function unload cdecl Alias "unload" () As short export

	If moduleState.startups > 0 Then
		If moduleState.methods.shutdown <> NULL Then
			If not moduleState.methods.shutdown() Then
				print("**** Console.unload: Module shutdown handler failed")
				return false
			End If
		End If

		moduleState.startups = 0
	End If

	moduleState.isLoaded = false

	return true
End Function



Function startup cdecl Alias "startup" () As short export
	If moduleState.startups = 0 Then
		If moduleState.methods.startup <> NULL Then
			If not moduleState.methods.startup() Then
				print("**** Console.startup: Module startup handler failed")
				return false
			
			End If
		End If
	End If

	moduleState.startups += 1

	return true
End Function

Function shutdown cdecl Alias "shutdown" () As short export
	moduleState.startups -= 1

	If moduleState.startups <= 0 Then
		moduleState.startups = 0

		If moduleState.methods.shutdown <> NULL Then
			If not moduleState.methods.shutdown() Then
				print("**** Console.shutdown: Module shutdown handler failed")
			End If
		End If
	End If

	return true
End Function
